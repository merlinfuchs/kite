// Code generated by tygo. DO NOT EDIT.
import { FlowData } from './flow.gen';
interface Empty {}

//////////
// source: app.go

export interface App {
  id: string;
  name: string;
  description: null | string;
  enabled: boolean;
  discord_id: string;
  owner_user_id: string;
  creator_user_id: string;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type AppGetResponse = App;
export interface AppCreateRequest {
  discord_token: string;
}
export type AppCreateResponse = App;
export interface AppUpdateRequest {
  name: string;
  description: null | string;
  enabled: boolean;
}
export type AppUpdateResponse = App;
export interface AppTokenUpdateRequest {
  discord_token: string;
}
export type AppTokenUpdateResponse = App;
export type AppDeleteResponse = Empty;
export type AppListResponse = (App | undefined)[];

//////////
// source: auth.go

export type AuthLogoutResponse = Empty;

//////////
// source: command.go

export interface Command {
  id: string;
  name: string;
  description: string;
  enabled: boolean;
  app_id: string;
  module_id: null | string;
  creator_user_id: string;
  flow_source: FlowData;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
  last_deployed_at: null | string /* RFC3339 */;
}
export type CommandGetResponse = Command;
export type CommandListResponse = (Command | undefined)[];
export interface CommandCreateRequest {
  flow_source: FlowData;
  enabled: boolean;
}
export type CommandCreateResponse = Command;
export interface CommandUpdateRequest {
  flow_source: FlowData;
  enabled: boolean;
}
export type CommandUpdateResponse = Command;
export type CommandDeleteResponse = Empty;

//////////
// source: log.go

export interface LogEntry {
  id: number /* int64 */;
  message: string;
  level: string;
  created_at: string /* RFC3339 */;
}
export type LogEntryListResponse = (LogEntry | undefined)[];

//////////
// source: user.go

export interface User {
  id: string;
  email: string;
  display_name: string;
  discord_id: string;
  discord_username: string;
  discord_avatar: null | string;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type UserGetResponse = User;

//////////
// source: variable.go

export interface Variable {
  id: string;
  scope: string;
  name: string;
  type: string;
  app_id: string;
  module_id: null | string;
  total_values: null | number;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type VariableGetResponse = Variable;
export type VariableListResponse = (Variable | undefined)[];
export interface VariableCreateRequest {
  scope: string;
  name: string;
  type: string;
}
export type VariableCreateResponse = Variable;
export interface VariableUpdateRequest {
  scope: string;
  name: string;
  type: string;
}
export type VariableUpdateResponse = Variable;
export type VariableDeleteResponse = Empty;
